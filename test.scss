@import url(x.css);
@import url(y.css);

$black: #000000;
$white: #ffffff;
/**
 * Multi-line comment
 */
.selector-1,
.selector-2,
.selector-3[type="text"] {
  background: linear-gradient(#ffffff, rgba(0, 0, 0, .8));
  box-sizing: border-box;
  color: #333333;
  display: block;
}

.selector-a,
.selector-b:not(:first-child) {
  padding: 10px !important;
  top: calc(calc(1em * 2) / 3);
}

.selector-x {
  border-color: $black $white $black $white;
  width :10%;
  border-color: $black $white $black $white;
}

.Block {
  &_-_Element {
    border-width: 2px 2px 2px 2px;
    display: block;
    color: $white;
  }
  &--modifier {
    color: red;
  }
}

/* Single-line comment */

@media (min-width >= 60em) {
  .selector {
    /* Flush to parent comment */
    -moz-transform: translate(1, 1) scale(3);
  }
}

@media(orientation: portrait), projection and (color) {
  .selector-i + .selector-ii {
    background: color(rgb(0, 0, 0) lightness(50%)); // inline single line comment
    font-family: helvetica, 'arial black', sans-serif;
  }
}

/* Flush single line comment */

@media screen and (min-resolution: 192dpi), screen and (min-resolution: 2dppx) {
  // single line comment
  .selector {
    background-image: repeating-linear-gradient(-45deg, transparent, #ffffff 25px, rgba(255, 255, 255, 1) 50px);
    box-shadow: .2rem 1px 1px #000000, 0 1px 0 #ffffff, 2px 2px 1px 1px #cccccc inset;
    height: 10rem;
    margin: 10px;
    margin-bottom: 5px;
  }

  /* Flush nested single line comment */
  .selector::after {
    background-image: url(x.svg);
    content: '→';
  }
}

.bike,
%bike {
  color: $black;
  &__wheel {
    // valid element
    border-radius: 50%;
    &--front {
      left: 0;
    }
  }
  &--bell {
    // valid modifier
    color: $black;
    .bike__wheel {
      color: $black;
    }
  }

  &-list {
    // valid component :)
    float: left;
    &__item {
      float: left;
      &--bold {
        font-weight: bold;
      }
      &__Item {
        // invalid, no capitalized chars are allowed
        color: $black;
        text-align: right;
      }
    }
  }

  &__nestedBemName {
    // invalid
    display: none;
  }
}

.roadbike {
  @extend .bike;
  margin: 0 0 0 0;
}

.timeTrialbike {
  @extend %bike;
  &:after {
    float: right;
  }
}

.sbike-
list {
  float: right;
  &::hover {
    float: left;
  }
}

#dirty-id {
  border: 0;
  display: none;
}

ul.li.element span.child a.link {
  float: right;
  border: none;
}

.floatMetRarecamelDase {
  // silly
  float: right;
  border-right: 0.50rem solid $black;
}

// Dit is geen hyphenated BEM maar moet toch mogen
.errorMessage,
.no-js {
  color: $red;
}

.bike-list {
  &__item {
    &--bold {
      font-weight: bold;
    }
    &--Normal {
      float: right;
    }
  }
}

// mixin for clearfix

@mixin clearfix() {
  &:before,
  &:after {
    content: ' ';
    display: table;
  }

  ©
  &:after {    clear: both;
  }
}

.class {
  @include clearfix();
  padding: 10px;
}

.base {  color: red;
}

// placeholder
%base {
  padding: 12px;
}

.foo {
  @extend .base;
}

.bar {
  @extend %base;
}